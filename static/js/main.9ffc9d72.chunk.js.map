{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Error.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/NotFoundMsg.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Routers.js","Components/GlobalStyle.js","Components/App.js","index.js"],"names":["SHeader","styled","header","HEADERWRAPPER","div","HEADERLOGO","Links","ul","List","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","section","Title","span","Grid","Section","title","children","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","Loader","ErrorMsg","color","Error","errorMsg","PosterImg","imgURL","Rating","ImageContainer","Year","Poster","id","rating","year","isMovie","require","default","role","length","substring","number","bool","HomePresenter","nowPlaying","upcoming","popular","error","isLoading","map","movie","poster_path","vote_average","release_date","array","api","axios","create","baseURL","params","api_key","language","MovieApi","get","append_to_response","term","query","TVApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","airingToday","topRated","tv","name","first_air_date","airingTiday","TVContainer","NotFoundMsg","text","Form","form","Input","input","SearchPresenter","movieSearch","tvSearch","searchTerm","handleSubmit","updateTerm","onSubmit","value","onChange","placeholder","func","SearchContainer","e","preventDefault","fetchSearchDatas","target","Backdrop","bgImg","Content","Cover","posterImg","Data","MetaInfo","Divider","RunTime","Genres","Overview","p","DetailPresenter","result","backdrop_path","original_title","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","includes","match","history","parsedId","parseInt","isNaN","push","request","Routers","Header","path","component","Home","Seacrh","Detail","exact","TV","GlobalStyle","createGlobalStyle","reset","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ffc9d72.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.24a0c5f1.png\";","import { withRouter, Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst SHeader = styled.header`\npadding-top:20px;\nborder-bottom:2px solid black;\nbox-sizing: border-box;\nbox-shadow: 2px 2px 5px black;\n`;\n\nconst HEADERWRAPPER = styled.div`\n    padding-top: 8px;\n    display:flex;\n    height:50px;\n    margin:0 2.5rem;\n`;\n\nconst HEADERLOGO = styled.div`\n    color:red;\n    font-size:35px;\n`;\n\nconst Links = styled.ul`\n    display: flex;\n    gap:15px;\n    align-items: center;\n    justify-content: space-between;\n    margin-left: 30px;\n`;\n\nconst List = styled.li`\n    list-style : none;\n    text-align: center;\n    display:flex;\n    align-items: center;\n    padding-bottom:21px;\n    border-bottom: 7px solid ${props => props.current ? \"#e84118\" : \"transparent\"};\n`;\n\nconst SLink = styled(Link)`\n    text-decoration-line : none;\n    padding: 2px 10px;\n`;\n\nexport default withRouter(( { location : { pathname }}) => (\n    <SHeader>\n    <HEADERWRAPPER>\n        <HEADERLOGO>Netflix</HEADERLOGO>\n        <Links>\n            <List current={ pathname === \"/home\"}>\n                <SLink to=\"/home\">Home</SLink>\n            </List>\n            <List current={ pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </List>                \n            <List current={ pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </List>\n        </Links>\n    </HEADERWRAPPER>\n</SHeader>\n));\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.section`\n:not(:last-child){\n    margin-bottom : 50px;\n}\n`;\n\nconst Title = styled.span`\n    font-size:24px;\n    font-weight: 400;\n`;\n\nconst Grid = styled.div`\n    font-size:14px;\n    margin-top: 25px;\n    gap:30px;\n    display:grid;\n    grid-template-columns:repeat(auto-fill, 100px);\n`;\n\nconst Section = ({title, children}) => \n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>;\n\n\nSection.prototype = {\n    title : PropTypes.string.isRequired,\n    children : PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired\n}\n\n\nexport default Section;","import styled from 'styled-components';\n\nconst Container = styled.div`\nfont-size: 28px;\ndisplay:flex;\njustify-content: center;\nmargin-top:20px;\n`;\n\nexport const Loader = () => {\n    return (\n        <Container>\n            Loading .. \n        </Container>\n    )\n}","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n    text-align:center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 400px;\n`;\n\nconst ErrorMsg = styled.span`\n    color : ${props => props.color};\n`;\n\nexport default function Error({ errorMsg , color }){\n    return (\n        <Container>\n            <ErrorMsg color = { color }>{errorMsg}</ErrorMsg>\n        </Container>\n    )\n}\n\n    Error.prototype = {\n        errorMsg : PropTypes.string.isRequired,\n        color : PropTypes.string.isRequired,\n    }","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst SLink = styled(Link)`\n    list-style:none;\n    text-decoration:none;\n`;\n\nconst Container = styled.div`\n    height: 200px;\n`;\n\nconst PosterImg = styled.div`\n    background-image: url(${props => props.imgURL});\n    height:180px;\n    background-size : cover;\n    background-position: center center;\n    transition : opacity .1s linear;\n    border-radius: 4px;\n`;\n\nconst Rating = styled.span`\n    font-size: 16px;\n    position:absolute;\n    bottom:10px;\n    right:4px;\n    opacity:0;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom:6px;\n    &:hover {\n        ${PosterImg} {\n        opacity:0.3;\n        }\n        ${Rating} {\n        opacity:1;\n        }}\n    position:relative;\n`;\n\nconst Title = styled.span`\n    padding:10px 0;\n    font-size: 10px;\n    font-weight: 600;\n`;\n\nconst Year = styled.span`\n    display:inline-block;\n    margin-top:4px;\n    font-size:8px;\n`;\n\n\nexport default function Poster({ id, imgURL, title, rating, year, isMovie = false}) {\n    return (\n        <SLink to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n            <Container>\n                <ImageContainer>\n                    <PosterImg imgURL = {imgURL ? `https://image.tmdb.org/t/p/w300/${imgURL}` : require('../assets/noPosterSmall.png').default}></PosterImg>\n                    <Rating>\n                        <span role=\"img\" aria-label=\"rating\">⭐️</span>                    \n                        {\" \"} {rating}/10</Rating>\n                </ImageContainer>\n                <Title>{ title.length > 16 ? `${title.substring(0,16)}...` : title}</Title><br/>\n                <Year>{year}</Year>\n                </Container>        \n        </SLink>\n    )\n}\n\nPoster.prototype = {\n    id : PropTypes.number.isRequired,\n    imgURL : PropTypes.string.isRequired,\n    title : PropTypes.string.isRequired,\n    rating : PropTypes.string,\n    year : PropTypes.string,\n    isMovie : PropTypes.bool.isRequired,\n}","import PropTypes from 'prop-types';\nimport Section from '../../Components/Section';\nimport styled from 'styled-components';\nimport { Loader } from '../../Components/Loader';\nimport Error from '../../Components/Error';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\npadding : 15px;\n`;\n\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, isLoading }) => \n    isLoading ? <Loader/> : \n        <Container>\n            {nowPlaying && nowPlaying.length > 0 && (\n            <Section title = \"nowPlaying\">\n                {nowPlaying.map(movie => \n                    <Poster \n                        key={movie.id}\n                        id={movie.id} \n                        imgURL={movie.poster_path}\n                        title={movie.title}\n                        rating={movie.vote_average}\n                        year={movie.release_date.substring(0, 4)}\n                        isMovie={true}\n                        />)}\n            </Section>\n            )}\n            {upcoming && upcoming.length > 0 && (\n            <Section title = \"Upcoming\">\n                {upcoming.map(movie => \n                    <Poster\n                        key={movie.id} \n                        id={movie.id} \n                        imgURL={movie.poster_path}\n                        title={movie.title}\n                        rating={movie.vote_average}\n                        year={movie.release_date.substring(0, 4)}\n                        isMovie={true}\n                    />)}\n            </Section>\n            )}\n            {popular && popular.length > 0 && (\n            <Section title = \"popular\">\n                {popular.map(movie => \n                    <Poster\n                        key={movie.id} \n                        id={movie.id} \n                        imgURL={movie.poster_path}\n                        title={movie.title}\n                        rating={movie.vote_average}\n                        year={movie.release_date.substring(0, 4)}\n                        isMovie={true}\n                    />)}\n            </Section>\n            )}\n            { error && <Error errorMsg = { error } color = \"#535c68\"/>}\n        </Container>;\n\nHomePresenter.prototype = {\n    nowPlaying : PropTypes.array,\n    upcoming : PropTypes.array,\n    popular : PropTypes.array,\n    error : PropTypes.string,\n    isLoading : PropTypes.bool.isRequired,\n}\n\nexport default HomePresenter;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL : 'https://api.themoviedb.org/3/',\n    params : {\n        api_key : \"fc8d40daab92fcf34ecee1e3299f2c61\",\n        language : \"en-US\",\n    }\n})\n\nexport const MovieApi = {\n    nowPlaying : () => api.get(\"movie/now_playing\"),\n    upcoming : () => api.get(\"movie/upcoming\"),\n    popular : () => api.get(\"movie/popular\"),\n    movieDetail : (id) => { \n        return api.get(`movie/${id}`, {\n        params : {\n            append_to_response : \"videos\"\n        }\n    })},\n    movieSearch : (term) => { \n        return api.get(\"search/movie\", {\n        params : {\n            query : term\n        }\n    })}\n};\n\nexport const TVApi = {\n    popular : () => api.get(\"tv/popular\"),\n    topRated : () => api.get(\"tv/top_rated\"),\n    airingToday : () => api.get(\"tv/airing_today\"),\n    tvDetail : (id) => { \n        return api.get(`tv/${id}`, {\n        params : {\n            append_to_response : \"videos\"\n        }\n    })},\n    tvSearch : (term) => { \n        return api.get(\"search/tv\", {\n        params : {\n            query : term\n        }\n    })}\n};","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { MovieApi } from \"../../api\";\n\nexport default class HomeContainer extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    isLoading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await MovieApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await MovieApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await MovieApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Oops! Sorry, We can't respond your request. :(\",\n      });\n    } finally {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, isLoading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        isLoading={isLoading}\n      />\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport Section from '../../Components/Section';\nimport styled from 'styled-components';\nimport { Loader } from '../../Components/Loader';\nimport Error from '../../Components/Error';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\npadding : 15px;\n`;\n\nconst TVPresenter = ({ popular, airingToday, topRated, error, isLoading }) => {\n        return isLoading ? <Loader/> :\n            <Container>\n                {popular && popular.length > 0 && \n                <Section title = \"popular\">\n                    {popular.map(tv => \n                        <Poster\n                            key={tv.id} \n                            id={tv.id}\n                            imgURL={tv.poster_path}\n                            title={tv.name}\n                            rating={tv.vote_average}\n                            year={tv.first_air_date.substring(0, 4)}\n                        />)}\n                </Section>}\n                {airingToday && airingToday.length > 0 && \n                <Section title = \"airingToday\">\n                    {airingToday.map(tv => <Poster\n                        key={tv.id} \n                        id={tv.id}\n                        imgURL={tv.poster_path}\n                        title={tv.name}\n                        rating={tv.vote_average}\n                        year={tv.first_air_date.substring(0, 4)}\n                    />)}\n                </Section>}\n                {topRated && topRated.length > 0 && \n                <Section title = \"topRated\">\n                    {topRated.map(tv => <Poster\n                        key={tv.id}\n                        id={tv.id} \n                        imgURL={tv.poster_path}\n                        title={tv.name}\n                        rating={tv.vote_average}\n                        year={tv.first_air_date.substring(0, 4)}\n                    />)}\n                </Section>}\n                { error && <Error errorMsg = { error } color = \"#535c68\"/>}\n            </Container>\n};\n\nTVPresenter.prototype = {\n    popular : PropTypes.array,\n    airingTiday : PropTypes.array,\n    topRated : PropTypes.array,\n    error : PropTypes.string,\n    isLoading : PropTypes.bool.isRequired,\n}\n\nexport default TVPresenter;","import TVContainer from './TVContainer';\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { TVApi } from \"../../api\";\n\nexport default class TVContainer extends React.Component {\n  state = {\n    popular: null,\n    airingToday: null,\n    topRated: null,\n    error: null,\n    isLoading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: popular },\n      } = await TVApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await TVApi.airingToday();\n      const {\n        data: { results: topRated },\n      } = await TVApi.topRated();\n      this.setState({\n        popular,\n        airingToday,\n        topRated,\n      });\n    } catch {\n      this.setState({\n        error: \"Oops! Sorry, We can't respond your request. :(\",\n      });\n    } finally {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  }\n\n  render() {\n    const { popular, airingToday, topRated, error, isLoading } = this.state;\n    return (\n      <TVPresenter\n        popular={popular}\n        airingToday={airingToday}\n        topRated={topRated}\n        error={error}\n        isLoading={isLoading}\n      />\n    );\n  }\n}\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n    text-align:center;\n    font-size:22px;\n`;\n\nconst ErrorMsg = styled.span`\n    color : ${props => props.color};\n`;\n\nexport default function NotFoundMsg({ text, color }){\n    return (\n        <Container>\n            <ErrorMsg color={color}>{text}</ErrorMsg>\n        </Container>\n    )\n}\n\nNotFoundMsg.prototype = {\n        text : PropTypes.string.isRequired,\n        color : PropTypes.string.isRequired,\n    }","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Error from '../../Components/Error';\nimport { Loader } from '../../Components/Loader';\nimport Section from '../../Components/Section';\nimport NotFoundMsg from '../../Components/NotFoundMsg';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n    padding : 10px 20px;\n`;\n\nconst Form = styled.form`\n    width:100%;\n    margin-bottom : 50px;\n    border-bottom : 2px solid black;\n    box-shadow:2px 2px 5px black;\n    border-radius: 4px;\n`;\n\nconst Input = styled.input`\n    all : unset;\n    width:100%;\n    font-size:28px;\n    padding : 8px 15px;\n`;\n\nconst SearchPresenter = ({ \n        movieSearch, \n        tvSearch,\n        searchTerm, \n        error, \n        isLoading, \n        handleSubmit,\n        updateTerm }) => \n        <Container>\n            <Form onSubmit= { handleSubmit }>\n                <Input \n                    value = { searchTerm }\n                    onChange = { updateTerm }\n                    placeholder=\"Search Movie or TV ...\"\n                    >\n                </Input>\n                </Form>\n                {isLoading ? <Loader/> : (\n                    <>\n                    {movieSearch && movieSearch.length > 0 && \n                        <Section title = \"Movies Result\">\n                            {movieSearch.map(movie => \n                                <Poster\n                                    key={movie.id}\n                                    id={movie.id} \n                                    imgURL={movie.poster_path}\n                                    title={movie.title}\n                                    rating={movie.vote_average}\n                                    year={movie.release_date.substring(0, 4)}\n                                    isMovie={true}\n                                />)}\n                        </Section>}\n                    {tvSearch && tvSearch.length > 0 && \n                        <Section title = \"Tv Result\">\n                            {tvSearch.map(tv => \n                                <Poster\n                                key={tv.id} \n                                id={tv.id}\n                                imgURL={tv.poster_path}\n                                title={tv.name}\n                                rating={tv.vote_average}\n                                year={tv.first_air_date && tv.first_air_date.substring(0,4)}\n                            />\n                            )}</Section>}\n                    </>\n                )\n                    }\n                { error && <Error errorMsg = { error } color = \"#535c68\"/>}\n                { movieSearch && tvSearch && movieSearch.length === 0 && tvSearch.length === 0 && <NotFoundMsg text={\"Nothing found..\"} color=\"#535c68\"/>} \n                {/* movieSearch와 tvSearch 가 true 라는 걸 확인해야 하는 이유는? */}\n        </Container>;\n\n\nSearchPresenter.prototype = {\n    movieSearch : PropTypes.array,\n    tvSearch : PropTypes.array,\n    searchTerm : PropTypes.string,\n    handleSubmit : PropTypes.func,\n    updateTerm : PropTypes.func,\n    error : PropTypes.string,\n    isLoading : PropTypes.bool.isRequired,\n}\n\nexport default SearchPresenter;","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { MovieApi, TVApi } from \"../../api\";\n\nexport default class SearchContainer extends React.Component {\n  state = {\n    movieSearch: null,\n    tvSearch: null,\n    searchTerm: \"\",\n    error: null,\n    isLoading: false,\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.fetchSearchDatas();\n    }\n  };\n\n  updateTerm = (e) => {\n    const {\n      target: { value },\n    } = e;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  fetchSearchDatas = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ isLoading: true });\n    try {\n      const {\n        data: { results: movieSearch },\n      } = await MovieApi.movieSearch(searchTerm);\n      const {\n        data: { results: tvSearch },\n      } = await TVApi.tvSearch(searchTerm);\n      this.setState({\n        movieSearch,\n        tvSearch,\n      });\n    } catch {\n      this.setState({\n        error: \"Oops! Let's try another word :)\",\n      });\n    } finally {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  };\n\n  render() {\n    const { movieSearch, tvSearch, error, isLoading, searchTerm } = this.state;\n    return (\n      <>\n        <SearchPresenter\n          movieSearch={movieSearch}\n          tvSearch={tvSearch}\n          searchTerm={searchTerm}\n          error={error}\n          isLoading={isLoading}\n          handleSubmit={this.handleSubmit}\n          updateTerm={this.updateTerm}\n        />\n      </>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport { Loader } from '../../Components/Loader';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width:100vw;\n    height:calc(100vh - 80px);\n    position:relative;\n    box-sizing: border-box;\n    padding:50px;\n`;\n\nconst Backdrop = styled.div`\n    background-image: url(${props => props.bgImg});\n    background-size: cover;\n    background-position: center center;\n    filter: blur(2px) brightness(0.2);\n    height: 100%;\n    width:100%;\n    position:absolute;\n    left:0;\n    top:0;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width:100%;\n    height:100%;\n    position:relative;\n    z-index:100;\n`;\n\nconst Cover = styled.div`\n    width:30%;\n    height:100%;\n    background-image : url(${props => props.posterImg});\n    background-position: center center ;\n    background-size: cover ;\n    border-radius:2px;\n    box-shadow:3px 3px 10px black;\n`;\n\nconst Data = styled.div`\n    width:70%;\n    margin-left:20px;\n    border-radius: 2px;\n`;\n\nconst Title = styled.div`\nfont-size:22px;\nfont-weight:600;\n`;\n\nconst MetaInfo = styled.div`\n    margin:14px 0;\n    font-size:14px;\n`;\n\nconst Year = styled.span`\n\n`;\n\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n\nconst RunTime = styled.span`\n\n`;\n\nconst Genres = styled.span`\n    list-style:none;\n    color:#44bd32;\n`;\n\nconst Overview = styled.p`\n    font-size:16px;\n    line-height:20px;\n    margin-top:40px;\n    opacity:0.7;\n`;\n\n\nconst DetailPresenter = ({ result, error, isLoading}) =>\n    isLoading ? <Loader/> : (\n        <Container>\n            <Backdrop bgImg = {`https://image.tmdb.org/t/p/original${result.backdrop_path}`}>\n            </Backdrop>\n                <Content>\n                    <Cover posterImg = { result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require('../../assets/noPosterSmall.png').default}></Cover>\n                    <Data>\n                        <Title>{result.original_title ? result.original_title : result.name}</Title>\n                        <MetaInfo>\n                            <Year>{result.release_date ? result.release_date.substring(0,4) : result.first_air_date.substring(0,4)}</Year>\n                            <Divider>∙</Divider>\n                            <RunTime>{result.runtime ? result.runtime : result.episode_run_time}min</RunTime>\n                            <Divider>∙</Divider>\n                            <Genres>{result.genres.map((genre, index) => index === result.genres.length - 1 ? genre.name : `${genre.name}/`)}</Genres>\n                            {/* 마지막 장르 item 에 \"/\" 빼는거 이해 x */}\n                        </MetaInfo>\n                        <Overview>{result.overview}</Overview>\n                    </Data>\n                </Content>\n        </Container>\n    )\n;\n\n\nDetailPresenter.prototype = {\n    result : PropTypes.array,\n    error : PropTypes.string,\n    isLoading : PropTypes.bool.isRequired,\n}\n\nexport default DetailPresenter;","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;","import React from 'react';\nimport { MovieApi, TVApi } from '../../api';\nimport DetailPresenter from './DetailPresenter';\n\nexport default class DetailContainer extends React.Component {\n    constructor(props){\n        super(props);\n        const { location : { pathname } } = this.props;\n\n        this.state = {\n            result : null, // url에 들어온 값이 movie인지 tv인지 구분하고 id 가 무엇이냐에 따라 다른 데이터를 불러와야함\n            isMovie : pathname.includes(\"/movie/\"),\n            error : null,\n            isLoading : true, // 'Detail' 들어오자마자 로딩 시작\n        }\n    }\n\n        async componentDidMount() {\n            const { match : { params : { id }}} = this.props; // url에서 id를 가져온다\n            const { history } = this.props;\n            const { isMovie } = this.state;\n            const parsedId = parseInt(id);\n            let result;\n\n            if(isNaN(parsedId)){\n                history.push(\"/\");\n            }\n\n            try{\n                if(isMovie){\n                    const request = await MovieApi.movieDetail(parsedId);\n                        result = request.data;\n                }else{\n                    const request = await TVApi.tvDetail(parsedId);\n                        result = request.data;\n                }\n            } catch {\n                this.setState({ error : \"Oops! Sorry, We can't respond your request. :(\" })\n            } finally {\n                this.setState({\n                    isLoading : false,\n                    result,\n                })\n            }\n        }\n\n    render(){\n        const { result, error, isLoading } = this.state;\n        return (\n            <DetailPresenter\n                result = { result }\n                error = { error }\n                isLoading = { isLoading }\n            />\n        )\n    }\n}","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport Home from '../Routes/Home';\nimport TV from '../Routes/TV';\nimport Seacrh from '../Routes/Search';\nimport Detail from '../Routes/Detail';\n\nexport default function Routers() {\n    return (\n        <Router>\n        <Header/>\n        <Switch>\n            <Route path=\"/home\" component = { Home }></Route>\n            <Route path=\"/search\" component={ Seacrh }></Route>\n            <Route path=\"/movie/:id\" component= { Detail }></Route>\n            <Route path=\"/tv\" exact component={ TV }></Route>\n            <Route path=\"/tv/:id\" component= { Detail }></Route>\n        </Switch>\n        </Router>\n    )\n} ","import { createGlobalStyle } from \"styled-components\";\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n    ${reset};\n*{\n    color:#f7f7f7;\n}\n\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        margin:0;\n        background-color: rgba(20, 20, 20, 1);\n    }\n`;\n\nexport default GlobalStyle;","import Routers from './Routers';\nimport GlobalStyle from './GlobalStyle';\n\nexport default function App() {\n  return (\n      <>\n        <Routers/>\n        <GlobalStyle/>\n      </>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}